plugins {
    id 'java'
    id 'war'
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id 'application'
    id 'io.freefair.aspectj.post-compile-weaving' version '8.4'
}

group 'org.example'
version '0.1.0'

repositories {
    mavenCentral()
}

application {
    mainClassName = 'org.example.Main'
}

jar {
    manifest {
        attributes "Main-Class": "org.example.Main"
    }
}

war {
    archiveFileName = "api.war"
    webAppDirName = file('/tests/src/main/api')
//    from '/tests/src/main/resources/watermark'
    webAppDirName = file('/tests/src/main/resources')

}

dependencies {
    testImplementation(platform("org.junit:junit-bom:5.9.1"))
    testImplementation("org.junit.jupiter:junit-jupiter")

    implementation 'org.projectlombok:lombok:1.18.22'
    implementation("org.projectlombok:lombok:1.18.24")
    annotationProcessor("org.projectlombok:lombok:1.18.28")
    testCompileOnly("org.projectlombok:lombok:1.18.28")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.28")

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.mockito:mockito-core:4.11.0'

    implementation 'org.springframework:spring-core:6.1.2'
    implementation 'org.springframework:spring-context:6.1.2'


    implementation("org.postgresql:postgresql:42.2.23")

    implementation("org.yaml:snakeyaml:1.8")
    implementation("com.google.guava:guava:r05")

    implementation('org.apache.logging.log4j:log4j-core:2.20.0')
    implementation('org.apache.logging.log4j:log4j-api:2.20.0')
    implementation('org.apache.logging.log4j:log4j-slf4j-impl:2.20.0')

    implementation 'org.aspectj:aspectjrt:1.9.20.1'

    implementation 'com.google.code.gson:gson:2.7'

    implementation 'com.itextpdf:itextpdf:5.5.13.2'

    implementation 'org.apache.pdfbox:pdfbox:2.0.24'

    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'

}

test {
    useJUnitPlatform()
}